apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: demo-deployment
spec:
  selector:
    matchLabels:
      app: demo
  replicas: 1
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
        - name: demo
          image: gcr.io/GOOGLE_PROJECT_ID/IMAGE_NAME:IMAGE_VERSION
          imagePullPolicy: Always
          ports:
            - containerPort: 6565
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: cloudsql
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/cloudsql/credentials.json
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=CLOUD_SQL_INSTANCE_CONNECTION_NAME=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: esp
          image: gcr.io/endpoints-release/endpoints-runtime:1
          args: [
            "--http2_port=9000",
            "--backend=grpc://127.0.0.1:6565",
            "--service=worker.endpoints.GOOGLE_PROJECT_ID.cloud.goog",
            "--rollout_strategy=managed",
          ]
          ports:
            - containerPort: 9000
        - name: grpc-webproxy
          image: gcr.io/GOOGLE_PROJECT_ID/webproxy:v1
          command: ["/grpcwebproxy",
                    "--backend_addr=127.0.0.1:9000",
                    "--run_tls_server=false"]
          ports:
            - containerPort: 8080
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service
spec:
  type: LoadBalancer
  selector:
    app: demo
  ports:
    - name: grpc-web-proxy
      protocol: TCP
      port: 80
      targetPort: 8080
  loadBalancerIP: WORKER_SERVICE_IP
