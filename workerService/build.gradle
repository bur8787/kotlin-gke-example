buildscript {
    ext.kotlin_version = '1.2.31'
    ext.spring_boot_version = '2.0.1.RELEASE'
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath 'gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:3.2.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath 'nu.studer:gradle-jooq-plugin:2.0.9'
    }
}

apply plugin: 'kotlin' 
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'com.google.protobuf'
apply plugin: 'nu.studer.jooq'

jar {
    baseName = 'gs-rest-service'
    version = '0.1.0'
}

repositories {
    jcenter()
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

sourceSets {
    main {
        proto {
            srcDir '../protofiles'
        }
    }
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.kotlin.srcDirs += 'src/main/generated-proto'
    main.kotlin.srcDirs += 'src/main/generated-jooq'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.exposed:spring-transaction:0.10.2'
    compile 'org.jetbrains.exposed:exposed:0.10.2'
    compile 'org.springframework.boot:spring-boot-starter-jooq'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.lognet:grpc-spring-boot-starter:2.3.1'
    compile 'org.jooq:jooq'
    compile 'mysql:mysql-connector-java'

    runtime 'com.h2database:h2'

    jooqRuntime 'com.h2database:h2'
    jooqRuntime 'mysql:mysql-connector-java'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.4.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.7.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = 'generated-proto'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'generated-proto'
                }
            }
        }
    }
    generatedFilesBaseDir = "${projectDir}/src/"
}

jooq {
    version = '3.10.1'
    edition = 'OSS'
    worker(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            url = 'jdbc:mysql://127.0.0.1/public'
            user = 'sa'
            password = ''
        }
        generator {
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'public'
            }
            target {
                packageName = 'com.example.generated.jooq'
                directory = 'src/main/generated-jooq/'
            }
        }
    }
}

project.tasks.getByName('compileJava').dependsOn -= 'generateWorkerJooqSchemaSource'
project.tasks.getByName('clean').dependsOn -= 'cleanGenerateWorkerJooqSchemaSource'

