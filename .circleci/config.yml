version: 2
jobs:
  test:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: Test
          command: |
            cd workerService
            ./gradlew check -x test
            ./gradlew test
  deploy:
    docker:
      - image: google/cloud-sdk
        environment:
        - IMAGE_NAME: demo
        - IMAGE_VERSION: v1
        - CLUSTER_NAME: demo-cluster
        - DEPLOYMENT_NAME: demo-deployment
        - SERVICE_NAME: demo-service
    steps:
      - checkout
      - run:
          name: Configurate GCP
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Submit image
          command: |
            cd workerService
            gcloud container builds submit --tag=gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_VERSION} .
      - run:
          name: Clean deployment
          name: Install protoc
          command: |
              PROTOC_ZIP=protoc-3.3.0-linux-x86_64.zip
              curl -OL https://github.com/google/protobuf/releases/download/v3.3.0/$PROTOC_ZIP
              apt-get install unzip
              unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
              rm -f $PROTOC_ZIP
      - run:
          name: Deploy service config to Service Management
          command: |
            cd protofiles
            protoc --include_imports --include_source_info worker.proto --descriptor_set_out ../workerService/out.pb
            cd ../workerService
            sed -i -e "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" api_config.yaml
            gcloud endpoints services deploy out.pb api_config.yaml
      - run:
          name: Delete deployment
          command: |
            kubectl delete service --ignore-not-found ${SERVICE_NAME}
            kubectl delete deployment --ignore-not-found ${DEPLOYMENT_NAME}
      - run:
          name: Create deployment
          command: | # gcloud container clusters create demo-cluster --num-nodes=2
            cd workerService
            gcloud config set container/cluster ${CLUSTER_NAME}
            sed -i -e "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" deployment.yaml
            sed -i -e "s/IMAGE_NAME/${IMAGE_NAME}/g" deployment.yaml
            sed -i -e "s/IMAGE_VERSION/${IMAGE_VERSION}/g" deployment.yaml
            sed -i -e "s/CLOUD_SQL_INSTANCE_CONNECTION_NAME/${CLOUD_SQL_INSTANCE_CONNECTION_NAME}/g" deployment.yaml
            sed -i -e "s/WORKER_SERVICE_IP/${WORKER_SERVICE_IP}/g" deployment.yaml
            kubectl create -f deployment.yaml

workflows:
  version: 2
  build:
    jobs:
      - test
      - deploy:
          requires:
            - test
