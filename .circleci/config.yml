version: 2
jobs:
  build-image:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build jar
          command: ./gradlew build
      - run:
          name: Build image
          command: docker build --no-cache -t demo .
      - run:
          name: Save image
          command: docker save demo > demo.tar
      - persist_to_workspace:
          root: .
          paths: demo.tar
  deploy-job:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load image
          command: docker load < demo.tar
      - run:
          name: Store GCP Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Initialize GCP
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Deploy image
          command: |
            gcloud container builds submit --tag=gcr.io/${GOOGLE_PROJECT_ID}/demo:v1 .
            gcloud container images list
      - run:
          name: Run service
          command: | #gcloud container clusters create demo-cluster --num-nodes=2
            gcloud config set container/cluster demo-cluster
            kubectl run demo --image=gcr.io/${GOOGLE_PROJECT_ID}/demo:v1 --port 8080
            kubectl get pods
            kubectl expose deployment demo --type=LoadBalancer --port 80 --target-port 8080
            kubectl get service

workflows:
  version: 2
  build:
    jobs:
      - build-image
      - deploy-job:
          requires:
            - build-image
